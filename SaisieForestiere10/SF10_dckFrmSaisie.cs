using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using ESRI.ArcGIS.Carto;
using ESRI.ArcGIS.ArcMapUI;
using ESRI.ArcGIS.Desktop.AddIns;
using ESRI.ArcGIS.Framework;
using ESRI.ArcGIS.esriSystem;
using ESRI.ArcGIS.Editor;
using ESRI.ArcGIS.Geodatabase;

namespace SaisieForestiere10
{
    /// <summary>
    /// Designer class of the dockable window add-in. It contains user interfaces that
    /// make up the dockable window.
    /// </summary>
    public partial class SF10_dckFrmSaisie : UserControl
    {
        private static System.Windows.Forms.Button s_Button;

        public SF10_dckFrmSaisie(object hook)
        {
            InitializeComponent();
            this.Hook = hook;

            s_Button = button1;
        }

        internal static bool Exists
        {
            get
            {
                return (s_Button == null) ? false : true;
            }
        }

        /// <summary>
        /// Host object of the dockable window
        /// </summary>
        private object Hook
        {
            get;
            set;
        }

        public void UpdateSaisieDockWin()
        {
            // If the dockview hasn't been created yet
            if (!SF10_dckFrmSaisie.Exists)
                return;

            if (SF10_extMain.m_LayerName != null)
            {
                IFeatureSelection pFsel = SF10_extMain.m_LayerName as IFeatureSelection;
                ISelectionSet pSelectionSet = pFsel.SelectionSet;
                ICursor pCursor;
                IFeatureCursor pFCursor;

                pSelectionSet.Search(null, true, out pCursor);
                pFCursor = pCursor as IFeatureCursor;

                if (pSelectionSet.Count == 1)
                {
                    IFeature pFeat = pFCursor.NextFeature();

                    if (pFeat.Fields.FindField("fid") == -1)
                    {
                        textBox1.Text = pFeat.Value[pFeat.Fields.FindField("objectid")].ToString();
                    }
                    else
                    {
                        textBox1.Text = pFeat.Value[pFeat.Fields.FindField("fid")].ToString();
                    }

                    pFeat = null;
                }

                pFCursor = null;
                pCursor = null;
                pSelectionSet = null;
                pFsel = null;
            }
        }

        /// <summary>
        /// Implementation class of the dockable window add-in. It is responsible for 
        /// creating and disposing the user interface class of the dockable window.
        /// </summary>
        public class AddinImpl : ESRI.ArcGIS.Desktop.AddIns.DockableWindow
        {
            private SF10_dckFrmSaisie m_windowUI;

            public AddinImpl()
            {
            }

            // this property is what I added - the rest was generated by the template
            internal SF10_dckFrmSaisie UI
            {
                get { return m_windowUI; }
            }

            protected override IntPtr OnCreateChild()
            {
                m_windowUI = new SF10_dckFrmSaisie(this.Hook);
                return m_windowUI.Handle;
            }

            protected override void Dispose(bool disposing)
            {
                if (m_windowUI != null)
                    m_windowUI.Dispose(disposing);

                base.Dispose(disposing);
            }
        }
    }
}
